#
# Browse configuration
#

# number of seconds to keep cached browses around
# set to 0 to disable caching
cache_timeout = 600

# Configuration for object browse
ca_objects = {
	facets = {
		parataxon_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = parataxon,
			restrict_to_types = [],
			
			facet_groups = [main],
			
			groupings = {
			#	label = _(Name)
			},
			group_mode = alphabetical,
			
			indefinite_article = a,
			label_singular = _(parataxon),
			label_plural = _(parataxa),
			group_name = _(Taxonomy)
		},
		order_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = order,
			restrict_to_types = [],
			
			facet_groups = [main],
			
			groupings = {
			#	label = _(Name)
			},
			group_mode = alphabetical,
			
			indefinite_article = a,
			label_singular = _(order),
			label_plural = _(orders),
			group_name = _(Taxonomy)
		},
		family_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = family,
			restrict_to_types = [],
			
			facet_groups = [main],
			
			groupings = {
			#	label = _(Name)
			},
			group_mode = alphabetical,
			
			indefinite_article = a,
			label_singular = _(family),
			label_plural = _(families),
			group_name = _(Taxonomy)
		},
		genus_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = genus,
			restrict_to_types = [],
			
			facet_groups = [main],
			
			groupings = {
			#	label = _(Name)
			},
			group_mode = alphabetical,
			
			indefinite_article = a,
			label_singular = _(genus),
			label_plural = _(genera),
			group_name = _(Taxonomy)
		},
		species_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = species,
			restrict_to_types = [],
			
			facet_groups = [main],
			
			groupings = {
			#	label = _(Name)
			},
			group_mode = alphabetical,
			
			requires = [genus],
			
			indefinite_article = a,
			label_singular = _(species),
			label_plural = _(species),
			group_name = _(Taxonomy)
		},
		#
		# Misc
		#
		morphotype = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = morphotype,
			restrict_to_types = [],
			
			facet_groups = [main],
			
			groupings = {
			#	label = _(Name)
			},
			group_mode = alphabetical,
			
			indefinite_article = a,
			label_singular = _(morphotype),
			label_plural = _(morphotypes),
			group_name = _(General)
		},
		pore_system = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = poreSystem,
			restrict_to_types = [],
			
			groupings = {
			#	label = _(Name)
			},
			group_mode = alphabetical,
			
			indefinite_article = a,
			label_singular = _(pore system),
			label_plural = _(pore system),
			group_name = _(General)
		},
		nest_structure_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = nestStructure,
			restrict_to_types = [],
			
			groupings = {
			#	label = _(Name)
			},
			group_mode = alphabetical,
			
			indefinite_article = a,
			label_singular = _(nest structure),
			label_plural = _(nest structures),
			group_name = _(General)
		},
		embryos_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = embryos,
			restrict_to_types = [],
						
			groupings = {
			#	label = _(Name)
			},
			group_mode = alphabetical,
			
			indefinite_article = a,
			label_singular = _(embryo),
			label_plural = _(embryos),
			group_name = _(General)
		},
		place_facet_hier = {
			type = authority,
			table = ca_places,
			relationship_table = ca_objects_x_places,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = hierarchical,
			groupings = {
			
			},
			
			use_idno = 1,
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = ,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			label_singular = _("locality browser"),
			label_plural = _("localities browser")
		},
		embryos_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = stratigraphy,
			relative_to = ca_places,
			restrict_to_types = [],
						
			groupings = {
			#	label = _(Name)
			},
			group_mode = hierarchical,
			
			indefinite_article = a,
			label_singular = _("geochronology"),
			label_plural = _("geochronology"),
			group_name = _(General)
		},
	}
}

# Configuration for object representation browse
ca_object_representations = {
	facets = {
		title_facet = {
			type = label,
			restrict_to_types = [],
			preferred_labels_only = 1,
			
			group_mode = alphabetical,
			
			label_singular = _("object representation title"),
			label_plural = _("object representation titles")
		},
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_object_representations_x_entities,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			individual_group_display = 0,
			
			groupings = {
				label = _(Name), 
				type = _(Type),
				relationship_types = _("Role")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("entity"),
			label_plural = _("entities")
		},
		place_facet = {
			type = authority,
			table = ca_places,
			relationship_table = ca_object_representations_x_places,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = hierarchical,
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = ,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			label_singular = _("place"),
			label_plural = _("places")
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_object_representations_x_collections,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("collection"),
			label_plural = _("collections")
		},
		occurrence_facet = {
			type = authority,
			table = ca_occurrences,
			generate_facets_for_types = 1,
			relationship_table = ca_object_representations_x_occurrences,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			groupings = {
				label = _("Name"), 
				type = _("Type"),
				relationship_types = _("Role"),
				ca_attribute_dates_value:years = _("Years"),
				ca_attribute_dates_value:decades = _("Decades")
			},
			
			group_mode = alphabetical,
			
			label_singular = _("occurrence"),
			label_plural = _("occurrences")
		},
		storage_location_facet = {
			type = authority,
			table = ca_storage_locations,
			relationship_table = ca_object_representations_x_storage_locations,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = hierarchical,
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top
			remove_first_items = 0,
			
			# Maximum length of hierarchy to display
			hierarchy_limit = 3,
			
			# can be ASC or DESC
			hierarchy_order  = DESC,
			
			label_singular = _("storage location"),
			label_plural = _("storage locations")
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_object_representations_x_vocabulary_terms,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = hierarchical,
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp; ⬅ &nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = ,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			label_singular = _("term"),
			label_plural = _("terms")
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,

			label_singular = _("type"),
			label_plural = _("types")
		},
		status_facet = {
			type = fieldList,
			field = status,
			
			group_mode = none,
			
			label_singular = _("status"),
			label_plural = _("statuses")
		},
		access_facet = {
			type = fieldList,
			field = access,
			
			group_mode = none,
			
			indefinite_article = an,
			label_singular = _("access status"),
			label_plural = _("access statuses")
		}
	}
}

# Configuration for object lot browse
ca_object_lots = {
	facets = {
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_object_lots_x_entities,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("entity"),
			label_plural = _("entities")
		},
		place_facet = {
			type = authority,
			table = ca_places,
			relationship_table = ca_object_lots_x_places,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("place"),
			label_plural = _("places")
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_object_lots_x_collections,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("collection"),
			label_plural = _("collections")
		},
		occurrence_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_object_lots_x_occurrences,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _("occurrence"),
			label_plural = _("occurrences")
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_object_lots_x_vocabulary_terms,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("term"),
			label_plural = _("terms")
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _("type"),
			label_plural = _("types")
		},
		status_facet = {
			type = fieldList,
			field = status,
			
			group_mode = alphabetical,
			
			label_singular = _("status"),
			label_plural = _("statuses")
		},
		access_facet = {
			type = fieldList,
			field = access,
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _("access status"),
			label_plural = _("access statuses")
		}
	}
}
# --------------------------------------------------------------------
# Configuration for entity browse
ca_entities = {
	facets = {
		place_facet = {
			type = authority,
			table = ca_places,
			relationship_table = ca_entities_x_places,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("place"),
			label_plural = _("places")
		},
		occurrence_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _("occurrence"),
			label_plural = _("occurrences")
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("collection"),
			label_plural = _("collections")
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_entities_x_vocabulary_terms,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("term"),
			label_plural = _("terms")
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _("type"),
			label_plural = _("types")
		},
		status_facet = {
			type = fieldList,
			field = status,
			
			group_mode = alphabetical,
			
			label_singular = _("status"),
			label_plural = _("statuses")
		},
		access_facet = {
			type = fieldList,
			field = access,
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _("access status"),
			label_plural = _("access statuses")
		}
	}
}
# --------------------------------------------------------------------
# Configuration for collection browse
ca_collections = {
	facets = {
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("entity"),
			label_plural = _("entities")
		},
		place_facet = {
			type = authority,
			table = ca_places,
			relationship_table = ca_places_x_collections,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("place"),
			label_plural = _("places")
		},
		occurrence_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_occurrences_x_collections,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _("occurrence"),
			label_plural = _("occurrences")
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_collections_x_vocabulary_terms,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("term"),
			label_plural = _("terms")
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _("type"),
			label_plural = _("types")
		},
		status_facet = {
			type = fieldList,
			field = status,
			
			group_mode = alphabetical,
			
			label_singular = _("status"),
			label_plural = _("statuses")
		},
		access_facet = {
			type = fieldList,
			field = access,
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _("access status"),
			label_plural = _("access statuses")
		}
	}
}

# --------------------------------------------------------------------
# Configuration for place browse
ca_places = {
	facets = {
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_places,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("entity"),
			label_plural = _("entities")
		},
		object_facet = {
			type = authority,
			table = ca_objects,
			relationship_table = ca_objects_x_places,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("object"),
			label_plural = _("objects")
		},
		occurrence_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_places_x_occurrences,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _("occurrence"),
			label_plural = _("occurrences")
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_places_x_vocabulary_terms,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("term"),
			label_plural = _("terms")
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _("type"),
			label_plural = _("types")
		},
		status_facet = {
			type = fieldList,
			field = status,
			
			group_mode = alphabetical,
			
			label_singular = _("status"),
			label_plural = _("statuses")
		},
		access_facet = {
			type = fieldList,
			field = access,
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _("access status"),
			label_plural = _("access statuses")
		}
	}
}
# --------------------------------------------------------------------
# Configuration for occurrence browse
ca_occurrences = {
	facets = {
		#
		# Time Period
		#
		era_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = era,
			restrict_to_types = [],
			
			groupings = {
			#	label = _(Name)
			},
			group_mode = none,
			
			indefinite_article = a,
			label_singular = _(era),
			label_plural = _(eras),
			group_name = _(Time Period)
		},
		period_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = period,
			restrict_to_types = [],
			
			groupings = {
			#	label = _(Name)
			},
			group_mode = none,
			
			indefinite_article = a,
			label_singular = _(period),
			label_plural = _(periods),
			group_name = _(Time Period)
		},
		eml_period_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = period,
			restrict_to_types = [],
			
			groupings = {
			#	label = _(Name)
			},
			group_mode = none,
			
			indefinite_article = a,
			label_singular = _(EML period),
			label_plural = _(EML periods),
			group_name = _(Time Period)
		},
		epoch_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = Epoch,
			restrict_to_types = [],
			
			groupings = {
			#	label = _(Name)
			},
			group_mode = none,
			
			indefinite_article = a,
			label_singular = _(epoch),
			label_plural = _(epochs),
			group_name = _(Time Period)
		},
		eml_epoch_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = eml_epoch,
			restrict_to_types = [],
			
			groupings = {
			#	label = _(Name)
			},
			group_mode = none,
			
			indefinite_article = a,
			label_singular = _(EML epoch),
			label_plural = _(EML epochs),
			group_name = _(Time Period)
		},
		age_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = ageNALMA,
			restrict_to_types = [],
			
			groupings = {
			#	label = _(Name)
			},
			group_mode = none,
			
			indefinite_article = a,
			label_singular = _(age/NALMA),
			label_plural = _(ages/NALMA),
			group_name = _(Time Period)
		},
		eml_age_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = EMLage,
			restrict_to_types = [],
			
			groupings = {
			#	label = _(Name)
			},
			group_mode = none,
			
			indefinite_article = a,
			label_singular = _(EML age),
			label_plural = _(EML ages),
			group_name = _(Time Period)
		},
		subage_zone_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = subageZone,
			restrict_to_types = [],
			
			groupings = {
			#	label = _(Name)
			},
			group_mode = alphabetical,
			
			indefinite_article = a,
			label_singular = _(subage/zone),
			label_plural = _(subages/zones),
			group_name = _(Time Period)
		},
		group_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = group,
			restrict_to_types = [],
			
			groupings = {
			#	label = _(Name)
			},
			group_mode = alphabetical,
			
			indefinite_article = a,
			label_singular = _(group),
			label_plural = _(groups),
			group_name = _(Time Period)
		},
		formation_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = formation,
			restrict_to_types = [],
			
			groupings = {
			#	label = _(Name)
			},
			group_mode = alphabetical,
			
			indefinite_article = a,
			label_singular = _(formation),
			label_plural = _(formations),
			group_name = _(Time Period)
		},
		member_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = member,
			restrict_to_types = [],
			
			groupings = {
			#	label = _(Name)
			},
			group_mode = alphabetical,
			requires = [formation],
			
			
			indefinite_article = a,
			label_singular = _(member),
			label_plural = _(members),
			group_name = _(Time Period)
		},
		unit_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = attribute,		
			element_code = unit,
			restrict_to_types = [],
			
			groupings = {
			#	label = _(Name)
			},
			group_mode = alphabetical,
			requires = [member, formation],
			
			indefinite_article = a,
			label_singular = _(unit),
			label_plural = _(units),
			group_name = _(Time Period)
		},
		object_facet = {
			type = authority,
			table = ca_objects,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("object"),
			label_plural = _("objects")
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _("type"),
			label_plural = _("types")
		},
		status_facet = {
			type = fieldList,
			field = status,
			
			group_mode = alphabetical,
			
			label_singular = _("status"),
			label_plural = _("statuses")
		},
		access_facet = {
			type = fieldList,
			field = access,
			
			group_mode = alphabetical,
			
			indefinite_article = an,
			label_singular = _("access status"),
			label_plural = _("access statuses")
		}
	}
}

# --------------------------------------------------------------------
# Configuration for storage location browse
ca_storage_locations = {
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _("type"),
			label_plural = _("types")
		},
		status_facet = {
			type = fieldList,
			field = status,
			
			group_mode = alphabetical,
			
			label_singular = _("status"),
			label_plural = _("statuses")
		}
	}
}

# --------------------------------------------------------------------
# Configuration for list item browse
ca_list_items = {
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _("type"),
			label_plural = _("types")
		},
		status_facet = {
			type = fieldList,
			field = status,
			
			group_mode = alphabetical,
			
			label_singular = _("status"),
			label_plural = _("statuses")
		},
		access_facet = {
			type = fieldList,
			field = access,
			
			group_mode = alphabetical,
			
			label_singular = _("access status"),
			label_plural = _("access statuses")
		},
		object_facet = {
			type = authority,
			table = ca_objects,
			relationship_table = ca_objects_x_vocabulary_terms,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("object"),
			label_plural = _("objects")
		}
	}
}

# --------------------------------------------------------------------
# Configuration for tour browse
ca_tours = {
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _("type"),
			label_plural = _("types")
		},
		status_facet = {
			type = fieldList,
			field = status,
			
			group_mode = alphabetical,
			
			label_singular = _("status"),
			label_plural = _("statuses")
		},
		access_facet = {
			type = fieldList,
			field = access,
			
			group_mode = alphabetical,
			
			label_singular = _("access"),
			label_plural = _("accesses")
		}
	}
}

# --------------------------------------------------------------------
ca_tour_stops = {
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _("type"),
			label_plural = _("types")
		},
		status_facet = {
			type = fieldList,
			field = status,
			
			group_mode = alphabetical,
			
			label_singular = _("status"),
			label_plural = _("statuses")
		},
		access_facet = {
			type = fieldList,
			field = access,
			
			group_mode = alphabetical,
			
			label_singular = _("access"),
			label_plural = _("accesses")
		}
	}
}
# --------------------------------------------------------------------
